# Generated by Django 2.2.6 on 2021-03-17 18:31

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Дайте сообществу имя.', max_length=200, verbose_name='Имя сообщества')),
                ('slug', models.SlugField(help_text='Укажите адрес для страницы сообщества.', unique=True, verbose_name='Ключ для построения ссылки')),
                ('description', models.TextField(help_text='Опишите деятельность сообщества.', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Сообщество',
                'verbose_name_plural': 'Сообщества',
                'ordering': ('title',),
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите имя тега.', max_length=50, verbose_name='Имя тега')),
                ('slug', models.SlugField(help_text='Укажите адрес для страницы тега.', unique=True, verbose_name='Ключ для построения ссылки')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('title',),
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(help_text='Введите текст новой записи.', verbose_name='Текст')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Дата публикации записи.', verbose_name='Дата')),
                ('image', models.ImageField(blank=True, help_text='Кртинка к записи.', null=True, upload_to='posts/', verbose_name='Картинка')),
                ('author', models.ForeignKey(help_text='Автор записи.', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('group', models.ForeignKey(blank=True, help_text='Сообщество, с которым связана запись.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='api_post.Group', verbose_name='Сообщество')),
                ('tags', models.ManyToManyField(blank=True, help_text='Теги, подходящие к записи.', related_name='posts', to='api_post.Tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
                'ordering': ('-pub_date',),
                'get_latest_by': 'pub_date',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Текст комментария.', verbose_name='Текст')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Дата отправки комментария.', verbose_name='Дата')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('author', models.ForeignKey(help_text='Автор комментария.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='api_post.Comment')),
                ('post', models.ForeignKey(help_text='Комментируемая запись.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api_post.Post', verbose_name='Запись')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='api_post.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Лайк',
                'verbose_name_plural': 'Лайки',
                'ordering': ('user',),
                'unique_together': {('user', 'post')},
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(help_text='Пользователь, на которого подписываются.', on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('user', models.ForeignKey(help_text='Пользователь, который подписывается.', on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик')),
            ],
            options={
                'verbose_name': 'Подписка(у)',
                'verbose_name_plural': 'Подписки',
                'ordering': ('user',),
                'unique_together': {('user', 'author')},
            },
        ),
    ]
